---
apiVersion: v1
kind: ConfigMap
metadata:
  name: provisioner
data:
  settings.yaml: |-
    REDIS: redis
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: provisioner
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: provisioner
rules:
- apiGroups:
    - ""
  resources:
    - pods
    - jobs
  verbs:
    - get
    - create
    - watch
    - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: provisioner
subjects:
- kind: ServiceAccount
  name: provisioner
  namespace: default
roleRef:
  kind: ClusterRole
  name: provisioner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: provisioner
  name: provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: provisioner
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: provisioner
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: consolehub
      serviceAccount: provisioner
      containers:
      - image: pyconuk-2018-k8s:provisioner
        name: provisioner
        ports:
          - name: http
            containerPort: 5000
        volumeMounts:
          - mountPath: "/etc/provisioner"
            name: config-volume
        env:
        - name: SETTINGS
          value: /etc/provisioner/settings.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: provisioner
  labels:
    app: provisioner
spec:
  type: NodePort
  ports:
  - name: provisioner
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app: provisioner
